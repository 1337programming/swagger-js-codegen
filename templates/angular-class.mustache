/*jshint -W069 */
/*global angular:false */
angular.module('{{&moduleName}}', [])
.factory('{{&className}}', ['$q', '$http', '$rootScope', function($q, $http, $rootScope){
    'use strict';
    
    /**
     * {{&description}}
     * @class " || {{&className}} || "
     * @param {string} domain - The project domain
     * @param {string} cache - An angularjs cache implementation
     */
    var {{&className}} = (function(){
        function {{&className}}(options, cache){
            var domain = (typeof options === 'object') ? options.domain : options;
            this.domain = typeof(domain) === 'string' ? domain : '{{&domain}}';
            if(this.domain.length === 0) {
                throw new Error('Domain parameter must be specified as a string.');
            }
            cache = cache || ((typeof options === 'object') ? options.cache : cache);
            this.cache = cache;
            {{#isSecure}}
                this.token = (typeof options === 'object') ? options.token : {};
            {{/isSecure}}
        }

        {{&className}}.prototype.$on = function($scope, path, handler){
            var url = domain + path;
            $scope.$on(url, function(){
                handler();
            });
            return this;
        };

        {{&className}}.prototype.$broadcast = function(path){
            var url = domain + path;
            //cache.remove(url);
            $rootScope.$broadcast(url);
            return this;
        };

        {{#isSecure}}
            {{&className}}.prototype.setToken = function (value, headerOrQueryName, isQuery) {
                this.token.value = value;
                this.token.headerOrQueryName = headerOrQueryName;
                this.token.isQuery = isQuery;
            };
        {{/isSecure}}

        {{#methods}}
            {{> method}}
        {{/methods}}

	return {{&className}};
    })();

    return {{&className}};
}]);
